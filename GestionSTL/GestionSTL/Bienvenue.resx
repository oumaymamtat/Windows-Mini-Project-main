<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>